use gcpp-abstract-declarator;
use gcpp-access;
use gcpp-additive-expression;
use gcpp-align;
use gcpp-and-expression;
use gcpp-asm;
use gcpp-assignment;
use gcpp-attr;
use gcpp-attributed-statement;
use gcpp-balanced;
use gcpp-base;
use gcpp-bool;
use gcpp-cast-expression;
use gcpp-char;
use gcpp-class-or-decltype;
use gcpp-class;
use gcpp-comment;
use gcpp-condition;
use gcpp-conditional-expression;
use gcpp-constructor;
use gcpp-conversion;
use gcpp-cv;
use gcpp-decl-specifier;
use gcpp-declaration;
use gcpp-declarator;
use gcpp-decltype;
use gcpp-delete-expression;
use gcpp-elaborated-type-specifier;
use gcpp-encoding;
use gcpp-enum;
use gcpp-eq-expression;
use gcpp-escape;
use gcpp-exception;
use gcpp-expression;
use gcpp-float;
use gcpp-for-init;
use gcpp-for-range;
use gcpp-function;
use gcpp-id-expression;
use gcpp-ident;
use gcpp-initializer;
use gcpp-instantiate;
use gcpp-integer-literal;
use gcpp-iteration;
use gcpp-jump-statement;
use gcpp-labeled-statement;
use gcpp-lambda;
use gcpp-linkage;
use gcpp-literal;
use gcpp-logical-expression;
use gcpp-macro;
use gcpp-mem-initializer;
use gcpp-member;
use gcpp-multiplicative-expression;
use gcpp-namespace;
use gcpp-nested-name;
use gcpp-new;
use gcpp-no-ptr;
use gcpp-noexcept;
use gcpp-operator-id;
use gcpp-operator;
use gcpp-or-expression;
use gcpp-param;
use gcpp-postfix-expression;
use gcpp-primary-expression;
use gcpp-pseudo-dtor;
use gcpp-ptr-declarator;
use gcpp-ptr-member;
use gcpp-ptr-operator;
use gcpp-ptr;
use gcpp-pure;
use gcpp-ref;
use gcpp-relational-expression;
use gcpp-return-statement;
use gcpp-selection;
use gcpp-shift-expression;
use gcpp-specialize;
use gcpp-statement;
use gcpp-storage-class;
use gcpp-str;
use gcpp-suffix;
use gcpp-template;
use gcpp-translation-unit;
use gcpp-try;
use gcpp-type-id;
use gcpp-type-modifier;
use gcpp-type-name;
use gcpp-type-param;
use gcpp-type-specifier;
use gcpp-typedef;
use gcpp-unary-expression;
use gcpp-user-defined-literal;
use gcpp-using-directive;
use gcpp-virtual;

our class CPP14Parser::Actions 
does AbstractDeclarator::Actions
does Access::Actions
does AdditiveExpression::Actions
does Align::Actions
does AndExpression::Actions
does Asm::Actions
does AssignmentExpression::Actions
does AttributeSpecifierSeq::Actions
does AttributedStatement::Actions
does Balanced::Actions
does Base::Actions
does BooleanLiteral::Actions
does CV::Actions
does CastExpression::Actions
does CharacterLiteral::Actions
does Class::Actions
does ClassOrDeclType::Actions
does Comment::Actions
does Condition::Actions
does ConditionalExpression::Actions
does Constructor::Actions
does Conversion::Actions
does DeclSpecifier::Actions
does Declaration::Actions
does Declarator::Actions
does Decltype::Actions
does DeleteExpression::Actions
does ElaboratedTypeSpecifier::Actions
does Encoding::Actions
does Enum::Actions
does EqualityExpression::Actions
does Escape::Actions
does Exception::Actions
does Expression::Actions
does FloatingLiteral::Actions
does ForInitStatement::Actions
does ForRange::Actions
does Function::Actions
does IdExpression::Actions
does Identifier::Actions
does Initializer::Actions
does Instantiation::Actions
does IntegerLiteral::Actions
does IterationStatement::Actions
does JumpStatement::Actions
does LabeledStatement::Actions
does LambdaExpression::Actions
does Linkage::Actions
does Literal::Actions
does LogicalExpression::Actions
does MemInitializer::Actions
does Member::Actions
does MultiLineMacro::Actions
does MultiplicativeExpression::Actions
does Namespace::Actions
does NestedNameSpecifier::Actions
does NewExpression::Actions
does NoExceptExpression::Actions
does NoPointerDeclarator::Actions
does Operator::Actions
does OperatorId::Actions
does OrExpression::Actions
does Parameters::Actions
does PointerDeclarator::Actions
does PointerLiteral::Actions
does PointerMember::Actions
does PointerOperator::Actions
does PostfixExpression::Actions
does PrimaryExpression::Actions
does PseudoDestructorName::Actions
does Pure::Actions
does Ref::Actions
does RelationalExpression::Actions
does ReturnStatement::Actions
does SelectionStatement::Actions
does ShiftExpression::Actions
does Specialize::Actions
does Statement::Actions
does StorageClass::Actions
does StringLiteral::Actions
does Suffix::Actions
does Template::Actions
does TranslationUnit::Actions
does Try::Actions
does TypeId::Actions
does TypeModifier::Actions
does TypeName::Actions
does TypeParameter::Actions
does TypeSpecifier::Actions
does Typedef::Actions
does UnaryExpression::Actions
does UserDefinedLiteral::Actions
does UsingDirective::Actions
does Virtual::Actions
{
    method semi($/) {
        make $<comment>.made
    }

    # rule TOP { <.ws> <statement-seq> }
    method TOP($/) {
        make $<statement-seq>.made
    }
}

