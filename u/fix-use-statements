#!/usr/bin/env raku
use Chomper::Core::Lib
use File::Find;

my @python-uses = [
    "use Chomper::Py3::Pyrust;",                            
    "use Chomper::Py3::GpythonFunctionHeader;",
    "use Chomper::Py3::Gpython3Indent;",
    "use Chomper::Py3::Gpython3Keywords;",
    "use Chomper::Py3::Gpython3Name;",
    "use Chomper::Py3::Gpython3Numeric;",
    "use Chomper::Py3::Gpython3Operators;",
    "use Chomper::Py3::Gpython3Strings;",
    "use Chomper::Py3::Gpython3Typedargs;",
    "use Chomper::Py3::Gpython3Varargs;",
    "use Chomper::Py3::Gpython3;",
    "use Chomper::Py3::PythonFunctionHeader;",
    "use Chomper::Py3::PythonToRustActions;",
    "use Chomper::Py3::Python3Args;",
    "use Chomper::Py3::Python3Class;",
    "use Chomper::Py3::Python3Comment;",
    "use Chomper::Py3::Python3Compound;",
    "use Chomper::Py3::Python3Comprehension;",
    "use Chomper::Py3::Python3Decorator;",
    "use Chomper::Py3::Python3DunderInit;",
    "use Chomper::Py3::Python3Dunder;",
    "use Chomper::Py3::Python3Expr;",
    "use Chomper::Py3::Python3Func;",
    "use Chomper::Py3::Python3Lambdef;",
    "use Chomper::Py3::Python3Prelude;",
    "use Chomper::Py3::Python3Stmt;",
    "use Chomper::Py3::Python3Suite;",
    "use Chomper::Py3::Python3Varargs;",
];

my @cpp-uses = [
    "use Chomper::Cpp::CppActions;",
    "use Chomper::Cpp::CppModel;",
    "use Chomper::Cpp::CppTranslate;",
    "use Chomper::Cpp::GcppAbstractDeclarator;",
    "use Chomper::Cpp::GcppAccess;",
    "use Chomper::Cpp::GcppAdditiveExpression;",
    "use Chomper::Cpp::GcppAlign;",
    "use Chomper::Cpp::GcppAndExpression;",
    "use Chomper::Cpp::GcppAsm;",
    "use Chomper::Cpp::GcppAssignment;",
    "use Chomper::Cpp::GcppAttr;",
    "use Chomper::Cpp::GcppAttributedStatement;",
    "use Chomper::Cpp::GcppBalanced;",
    "use Chomper::Cpp::GcppBase;",
    "use Chomper::Cpp::GcppBin;",
    "use Chomper::Cpp::GcppBool;",
    "use Chomper::Cpp::GcppCastExpression;",
    "use Chomper::Cpp::GcppChar;",
    "use Chomper::Cpp::GcppClassOrDecltype;",
    "use Chomper::Cpp::GcppClass;",
    "use Chomper::Cpp::GcppComment;",
    "use Chomper::Cpp::GcppCondition;",
    "use Chomper::Cpp::GcppConditionalExpression;",
    "use Chomper::Cpp::GcppConstructor;",
    "use Chomper::Cpp::GcppConversion;",
    "use Chomper::Cpp::GcppCv;",
    "use Chomper::Cpp::GcppDec;",
    "use Chomper::Cpp::GcppDeclSpecifier;",
    "use Chomper::Cpp::GcppDeclaration;",
    "use Chomper::Cpp::GcppDeclarator;",
    "use Chomper::Cpp::GcppDecltype;",
    "use Chomper::Cpp::GcppDeleteExpression;",
    "use Chomper::Cpp::GcppDigit;",
    "use Chomper::Cpp::GcppElaboratedTypeSpecifier;",
    "use Chomper::Cpp::GcppEncoding;",
    "use Chomper::Cpp::GcppEnum;",
    "use Chomper::Cpp::GcppEqExpression;",
    "use Chomper::Cpp::GcppEscape;",
    "use Chomper::Cpp::GcppException;",
    "use Chomper::Cpp::GcppExpression;",
    "use Chomper::Cpp::GcppFloat;",
    "use Chomper::Cpp::GcppForInit;",
    "use Chomper::Cpp::GcppForRange;",
    "use Chomper::Cpp::GcppFunction;",
    "use Chomper::Cpp::GcppHex;",
    "use Chomper::Cpp::GcppIdExpression;",
    "use Chomper::Cpp::GcppIdent;",
    "use Chomper::Cpp::GcppInstantiate;",
    "use Chomper::Cpp::GcppIntegerLiteral;",
    "use Chomper::Cpp::GcppIteration;",
    "use Chomper::Cpp::GcppJumpStatement;",
    "use Chomper::Cpp::GcppKeywords;",
    "use Chomper::Cpp::GcppLabeledStatement;",
    "use Chomper::Cpp::GcppLambda;",
    "use Chomper::Cpp::GcppLinkage;",
    "use Chomper::Cpp::GcppLiteral;",
    "use Chomper::Cpp::GcppLogicalExpression;",
    "use Chomper::Cpp::GcppMacro;",
    "use Chomper::Cpp::GcppMemInitializer;",
    "use Chomper::Cpp::GcppMember;",
    "use Chomper::Cpp::GcppMultiplicativeExpression;",
    "use Chomper::Cpp::GcppNamespace;",
    "use Chomper::Cpp::GcppNestedName;",
    "use Chomper::Cpp::GcppNew;",
    "use Chomper::Cpp::GcppNoPtr;",
    "use Chomper::Cpp::GcppNoexcept;",
    "use Chomper::Cpp::GcppOct;",
    "use Chomper::Cpp::GcppOperatorId;",
    "use Chomper::Cpp::GcppOperator;",
    "use Chomper::Cpp::GcppOrExpression;",
    "use Chomper::Cpp::GcppParam;",
    "use Chomper::Cpp::GcppPostfixExpression;",
    "use Chomper::Cpp::GcppPrimaryExpression;",
    "use Chomper::Cpp::GcppPseudoDtor;",
    "use Chomper::Cpp::GcppPtrDeclarator;",
    "use Chomper::Cpp::GcppPtrMember;",
    "use Chomper::Cpp::GcppPtrOperator;",
    "use Chomper::Cpp::GcppPtr;",
    "use Chomper::Cpp::GcppPunctuation;",
    "use Chomper::Cpp::GcppPure;",
    "use Chomper::Cpp::GcppRef;",
    "use Chomper::Cpp::GcppRelationalExpression;",
    "use Chomper::Cpp::GcppReturnStatement;",
    "use Chomper::Cpp::GcppRoles;",
    "use Chomper::Cpp::GcppSelection;",
    "use Chomper::Cpp::GcppShiftExpression;",
    "use Chomper::Cpp::GcppSimpleTypeSpecifier;",
    "use Chomper::Cpp::GcppSpecialize;",
    "use Chomper::Cpp::GcppStatement;",
    "use Chomper::Cpp::GcppStorageClass;",
    "use Chomper::Cpp::GcppStr;",
    "use Chomper::Cpp::GcppSuffix;",
    "use Chomper::Cpp::GcppTemplate;",
    "use Chomper::Cpp::GcppToken;",
    "use Chomper::Cpp::GcppTranslationUnit;",
    "use Chomper::Cpp::GcppTry;",
    "use Chomper::Cpp::GcppTypeId;",
    "use Chomper::Cpp::GcppTypeModifier;",
    "use Chomper::Cpp::GcppTypeName;",
    "use Chomper::Cpp::GcppTypeParam;",
    "use Chomper::Cpp::GcppTypeSpecifier;",
    "use Chomper::Cpp::GcppTypedef;",
    "use Chomper::Cpp::GcppUnaryExpression;",
    "use Chomper::Cpp::GcppUserDefinedLiteral;",
    "use Chomper::Cpp::GcppUsingDirective;",
    "use Chomper::Cpp::GcppVirtual;",
    "use Chomper::Cpp::Gcpp;",
    "use Chomper::Cpp::GenerateCppModel;",
];

my @rust-uses = [
    "use Chomper::Rust::GrustArrayExpression;",
    "use Chomper::Rust::GrustAscii;",
    "use Chomper::Rust::GrustAssocItems;",
    "use Chomper::Rust::GrustBlockComment;",
    "use Chomper::Rust::GrustBlockExpressions;",
    "use Chomper::Rust::GrustBooleanLiteral;",
    "use Chomper::Rust::GrustByteLiteral;",
    "use Chomper::Rust::GrustByteStringLiteral;",
    "use Chomper::Rust::GrustCfgAttr;",
    "use Chomper::Rust::GrustCharLiteral;",
    "use Chomper::Rust::GrustClosureExpressions;",
    "use Chomper::Rust::GrustComment;",
    "use Chomper::Rust::GrustConfiguration;",
    "use Chomper::Rust::GrustCrateGrammar;",
    "use Chomper::Rust::GrustCrate;",
    "use Chomper::Rust::GrustDelimiters;",
    "use Chomper::Rust::GrustDocComment;",
    "use Chomper::Rust::GrustEnumerations;",
    "use Chomper::Rust::GrustExpressions;",
    "use Chomper::Rust::GrustExternalBlocks;",
    "use Chomper::Rust::GrustFloatLiteral;",
    "use Chomper::Rust::GrustFromAntlr;",
    "use Chomper::Rust::GrustFunctionPointerTypes;",
    "use Chomper::Rust::GrustFunctions;",
    "use Chomper::Rust::GrustGenericArgs;",
    "use Chomper::Rust::GrustGenericParameters;",
    "use Chomper::Rust::GrustIdentifiers;",
    "use Chomper::Rust::GrustIfExpressions;",
    "use Chomper::Rust::GrustImplTrait;",
    "use Chomper::Rust::GrustIntLiteral;",
    "use Chomper::Rust::GrustItem;",
    "use Chomper::Rust::GrustJumpExpressions;",
    "use Chomper::Rust::GrustKeyword;",
    "use Chomper::Rust::GrustLifetimes;",
    "use Chomper::Rust::GrustLineComment;",
    "use Chomper::Rust::GrustLiteralPattern;",
    "use Chomper::Rust::GrustLiteral;",
    "use Chomper::Rust::GrustLoopExpression;",
    "use Chomper::Rust::GrustMacros;",
    "use Chomper::Rust::GrustMatchExpressions;",
    "use Chomper::Rust::GrustMetaItem;",
    "use Chomper::Rust::GrustModel;",
    "use Chomper::Rust::GrustPathExpressions;",
    "use Chomper::Rust::GrustPaths;",
    "use Chomper::Rust::GrustPatternExpressions;",
    "use Chomper::Rust::GrustPunctuation;",
    "use Chomper::Rust::GrustRangePatterns;",
    "use Chomper::Rust::GrustReferencePatterns;",
    "use Chomper::Rust::GrustReservedKeywords;",
    "use Chomper::Rust::GrustStatements;",
    "use Chomper::Rust::GrustStrictKeywords;",
    "use Chomper::Rust::GrustStringLiteral;",
    "use Chomper::Rust::GrustStructExpressions;",
    "use Chomper::Rust::GrustStructPatterns;",
    "use Chomper::Rust::GrustStructs;",
    "use Chomper::Rust::GrustTokens;",
    "use Chomper::Rust::GrustTraitObjects;",
    "use Chomper::Rust::GrustTraits;",
    "use Chomper::Rust::GrustTupleExpression;",
    "use Chomper::Rust::GrustTupleStructPatterns;",
    "use Chomper::Rust::GrustTypeAlias;",
    "use Chomper::Rust::GrustTypePath;",
    "use Chomper::Rust::GrustTypes;",
    "use Chomper::Rust::GrustUnions;",
    "use Chomper::Rust::GrustUseDeclaration;",
    "use Chomper::Rust::GrustVisibility;",
    "use Chomper::Rust::GrustWeakKeywords;",
    "use Chomper::Rust::GrustWhereClause;",
    "use Chomper::Rust::GrustWhitespace;",
    "use Chomper::Rust::GrustXid;",
    "use Chomper::IndentRustNamedTypeList;",
    "use Chomper::InferRustdoc;",
    "use Chomper::RustFfi;",
    "use Chomper::RustGrammar;",
    "use Chomper::ToRustIdent;",
    "use Chomper::ToRustParams;",
    "use Chomper::ToRustType;",
];

my @translate-uses = [
    "use Chomper::Translate::TranslateCpp;",
    "use Chomper::Translate::TranslateIo;",
    "use Chomper::Translate::TranslateIr;",
    "use Chomper::Translate::TranslatePostfixExpressionList;",
    "use Chomper::Translate::TranslatePython;",
    "use Chomper::Translate::Translator;",
];

my @uses = [
    "use Chomper::Core::AbstractFunctions;",
    "use Chomper::Core::AlignColumn;",
    "use Chomper::Core::Align;",
    "use Chomper::Core::AntlrGrammar;",
    "use Chomper::Core::Api;",
    "use Chomper::Core::Args;",
    "use Chomper::Core::AvoidKeywords;",
    "use Chomper::Core::BlockComment;",
    "use Chomper::Core::BracedArrayLiteral;",
    "use Chomper::Core::CargoWorkspace;",
    "use Chomper::Core::Cargo;",
    "use Chomper::Core::Case;",
    "use Chomper::Core::CleanMacro;",
    "use Chomper::Core::Comments;",
    "use Chomper::Core::ConstexprGlobals;",
    "use Chomper::Core::Constructor;",
    "use Chomper::Core::Crates;",
    "use Chomper::Core::CtorHeader;",
    "use Chomper::Core::Dequote;",
    "use Chomper::Core::Destructor;",
    "use Chomper::Core::DoxyComment;",
    "use Chomper::Core::EnumMembers;",
    "use Chomper::Core::Feedback;",
    "use Chomper::Core::FormatName;",
    "use Chomper::Core::FormatTextwidth;",
    "use Chomper::Core::Formatting;",
    "use Chomper::Core::Formula;",
    "use Chomper::Core::FullEnum;",
    "use Chomper::Core::FullStruct;",
    "use Chomper::Core::FunctionLocals;",
    "use Chomper::Core::Function;",
    "use Chomper::Core::GetLeftMargin;",
    "use Chomper::Core::GfunctionHeader;",
    "use Chomper::Core::Git;",
    "use Chomper::Core::Gjson;",
    "use Chomper::Core::Gkeywords;",
    "use Chomper::Core::GlobalSubparse;",
    "use Chomper::Core::Grammar;",
    "use Chomper::Core::GsimpleIfdef;",
    "use Chomper::Core::Gtype;",
    "use Chomper::Core::Gyacc;",
    "use Chomper::Core::Hasher;",
    "use Chomper::Core::Hungarian;",
    "use Chomper::Core::IdentToken;",
    "use Chomper::Core::IxBang;",
    "use Chomper::Core::Lib",
    "use Chomper::Core::LineBreak;",
    "use Chomper::Core::LineCommentToBlockComment;",
    "use Chomper::Core::Locations;",
    "use Chomper::Core::MaximallyShiftTowardLeftMargin;",
    "use Chomper::Core::NumericToken;",
    "use Chomper::Core::OpAdd;",
    "use Chomper::Core::OpBitand;",
    "use Chomper::Core::OpBitor;",
    "use Chomper::Core::OpConvert;",
    "use Chomper::Core::OpDiv;",
    "use Chomper::Core::OpDivEq;",
    "use Chomper::Core::OpEq;",
    "use Chomper::Core::OpIndex;",
    "use Chomper::Core::OpMul;",
    "use Chomper::Core::OpMulEq;",
    "use Chomper::Core::OpNegate;",
    "use Chomper::Core::OpShift;",
    "use Chomper::Core::OpSub;",
    "use Chomper::Core::OpXor;",
    "use Chomper::Core::OperatorIndirect;",
    "use Chomper::Core::OperatorIntoBool;",
    "use Chomper::Core::OperatorNot;",
    "use Chomper::Core::Operators;",
    "use Chomper::Core::Ostream;",
    "use Chomper::Core::PoundDefine;",
    "use Chomper::Core::QuotedStringToken;",
    "use Chomper::Core::ReformatBlockComment;",
    "use Chomper::Core::RemoveCommentTokens;",
    "use Chomper::Core::RemoveDoubleNewlines;",
    "use Chomper::Core::ReturnType;",
    "use Chomper::Core::RuleBracedArrayLiteral;",
    "use Chomper::Core::RuleLineComment;",
    "use Chomper::Core::SegmentRemoveDuplicates;",
    "use Chomper::Core::SimpleIfdef;",
    "use Chomper::Core::SnakeCase;",
    "use Chomper::Core::StaticConst;",
    "use Chomper::Core::StructMembers;",
    "use Chomper::Core::Template;",
    "use Chomper::Core::Textwidth;",
    "use Chomper::Core::Time;",
    "use Chomper::Core::TodoBlock;",
    "use Chomper::Core::TreeMark;",
    "use Chomper::Core::TypeInfo;",
    "use Chomper::Core::TypedefFnPtr;",
    "use Chomper::Core::Typemap;",
    "use Chomper::Core::UsingDeclarations;",
    "use Chomper::Core::Util;",
    "use Chomper::Core::Vbar;",
    "use Chomper::Core::WrapBodyTodo;",
    "use Chomper::Core::WrapComment;",
    "use Chomper::Core::YaccActions;",
];

sub create-new-use-statement($old, $prefix) {

    my $token = $old.split(" ")[1].split(/\- | _/)>>.tc.join;

    "use " ~ $prefix ~ $token
}

sub use-statement-mappings(@list, $prefix) {
    @list
    ==> map({
        ($_, create-new-use-statement($_, $prefix))
    })
}

sub MAIN(:$write = False) {

    my @mappings = [
        |use-statement-mappings(@python-uses,    "Chomper::Py3::"),
        |use-statement-mappings(@cpp-uses,       "Chomper::Cpp::"),
        |use-statement-mappings(@rust-uses,      "Chomper::Rust::"),
        |use-statement-mappings(@translate-uses, "Chomper::Translate::"),
        |use-statement-mappings(@uses,           "Chomper::Core::"),
    ];

    find(dir => "u")

    ==> grep({ $_ !~~ /precomp/ })

    ==> grep({ $_.IO.f })

    ==> map({

        my $text = $_.IO.slurp;

        for @mappings -> ($src, $dst) {

            $text .= subst($src, $dst, :g);
        }

        ($_, $text)
    })

    ==> map({

        my $file = $_[0];
        my $text = $_[1];

        if $write {
            $file.IO.spurt: $text;
        } else {
            say "----------------";
            say $file;
            say $text;
        }
    })
}
