#!/usr/bin/env raku
use python-grammar;
use Data::Dump::Tree;
use Data::Dump;
use JSON::Tiny;
use python-to-rust-actions;

class A does Python3::ToRustActions {}

grammar G does Python3 { }

use Grammar::Tracer;
grammar GD does Python3 { }

sub MAIN(Bool :$debug = False, :$rule = Nil, :$to-rust = True) {

    my $in = $*IN.slurp;

    my %kwargs = %();

    if $rule { 
        %kwargs<rule> = $rule; 
        $in = $in.chomp; 
    }

    if $to-rust { 
        %kwargs<actions> = A.new 
    }

    my $parsed = G.parse($in, |%kwargs) // GD.parse($in, |%kwargs);
    #say $parsed;

    if $to-rust {
        say to-json($parsed.made);

    } else {
        say $parsed;
    }
}
