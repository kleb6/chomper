use Chomper::Rust::GrustArrayExpression;
use Chomper::Rust::GrustAscii;
use Chomper::Rust::GrustAssocItems;
use Chomper::Rust::GrustComment;
use Chomper::Rust::GrustLineComment;
use Chomper::Rust::GrustBlockComment;
use Chomper::Rust::GrustDocComment;
use Chomper::Rust::GrustBlockExpressions;
use Chomper::Rust::GrustBooleanLiteral;
use Chomper::Rust::GrustByteLiteral;
use Chomper::Rust::GrustByteStringLiteral;
use Chomper::Rust::GrustCfgAttr;
use Chomper::Rust::GrustCharLiteral;
use Chomper::Rust::GrustClosureExpressions;
use Chomper::Rust::GrustConfiguration;
use Chomper::Rust::GrustCrate;
use Chomper::Rust::GrustDelimiters;
use Chomper::Rust::GrustEnumerations;
use Chomper::Rust::GrustExpressions;
use Chomper::Rust::GrustExternalBlocks;
use Chomper::Rust::GrustFloatLiteral;
use Chomper::Rust::GrustFunctionPointerTypes;
use Chomper::Rust::GrustFunctions;
use Chomper::Rust::GrustGenericArgs;
use Chomper::Rust::GrustGenericParameters;
use Chomper::Rust::GrustIdentifiers;
use Chomper::Rust::GrustIfExpressions;
use Chomper::Rust::GrustImplTrait;
use Chomper::Rust::GrustIntLiteral;
use Chomper::Rust::GrustItem;
use Chomper::Rust::GrustJumpExpressions;
use Chomper::Rust::GrustLifetimes;
use Chomper::Rust::GrustLiteralPattern;
use Chomper::Rust::GrustLiteral;
use Chomper::Rust::GrustLoopExpression;
use Chomper::Rust::GrustMacros;
use Chomper::Rust::GrustMatchExpressions;
use Chomper::Rust::GrustMetaItem;
use Chomper::Rust::GrustPathExpressions;
use Chomper::Rust::GrustPaths;
use Chomper::Rust::GrustPatternExpressions;
use Chomper::Rust::GrustPunctuation;
use Chomper::Rust::GrustRangePatterns;
use Chomper::Rust::GrustReferencePatterns;
use Chomper::Rust::GrustReservedKeywords;
use Chomper::Rust::GrustStatements;
use Chomper::Rust::GrustStrictKeywords;
use Chomper::Rust::GrustStringLiteral;
use Chomper::Rust::GrustStructExpressions;
use Chomper::Rust::GrustStructPatterns;
use Chomper::Rust::GrustStructs;
use Chomper::Rust::GrustTokens;
use Chomper::Rust::GrustTraitObjects;
use Chomper::Rust::GrustTraits;
use Chomper::Rust::GrustTupleStructPatterns;
use Chomper::Rust::GrustTupleExpression;
use Chomper::Rust::GrustTypeAlias;
use Chomper::Rust::GrustTypePath;
use Chomper::Rust::GrustTypes;
use Chomper::Rust::GrustUnions;
use Chomper::Rust::GrustUseDeclaration;
use Chomper::Rust::GrustVisibility;
use Chomper::Rust::GrustWeakKeywords;
use Chomper::Rust::GrustWhereClause;
use Chomper::Rust::GrustWhitespace;
use Chomper::Rust::GrustXid;

our role Rust::Grammar::Role
does ArrayExpressionGrammar::Rules 
does AssociatedItemGrammar::Rules 
does BareFunctionTypeGrammar::Rules 
does CommentGrammar::Rules 
does LineCommentGrammar::Rules 
does BlockCommentGrammar::Rules 
does DocCommentGrammar::Rules 
does BlockExpressionGrammar::Rules 
does CfgAttrGrammar::Rules 
does ClosureExpressionGrammar::Rules 
does ConfigurationPredicateGrammar::Rules 
does CrateGrammar::Rules 
does EnumerationGrammar::Rules 
does ExpressionGrammar::Rules 
does ExternBlockGrammar::Rules 
does FunctionGrammar::Rules 
does GenericArgsGrammar::Rules 
does GenericParamsGrammar::Rules 
does IdentifiersGrammar::Rules 
does IfExpressionsGrammar::Rules 
does ImplTraitTypeGrammar::Rules 
does ItemGrammar::Rules 
does JumpExpressionGrammar::Rules 
does LifetimesGrammar::Rules 
does LiteralExpressionGrammar::Rules 
does LiteralPatternGrammar::Rules 
does LoopExpressionGrammar::Rules 
does MacroInvocationGrammar::Rules 
does MatchExpressionGrammar::Rules 
does MetaItemGrammar::Rules 
does PathExpressionGrammar::Rules 
does PatternGrammar::Rules 
does PunctuationGrammar::Rules 
does RangePatternGrammar::Rules 
does ReferencePatternGrammar::Rules 
does ReservedKeywordsGrammar::Rules 
does SimplePathGrammar::Rules 
does StatementGrammar::Rules 
does StrictKeywordsGrammar::Rules 
does StructGrammar::Rules 
does StructExpressionGrammar::Rules 
does StructPatternGrammar::Rules 
does TokensGrammar::Rules 
does TraitGrammar::Rules 
does TraitObjectTypeGrammar::Rules 
does TupleExpressionGrammar::Rules 
does TupleStructPatternGrammar::Rules 
does TypeGrammar::Rules 
does TypeAliasGrammar::Rules 
does TypePathGrammar::Rules 
does UnionGrammar::Rules 
does UseDeclarationGrammar::Rules 
does VisibilityGrammar::Rules 
does WeakKeywordsGrammar::Rules 
does WhereClauseGrammar::Rules 
does WhitespaceGrammar::Rules 
does XidGrammar::Rules 
does AsciiGrammar::Rules
does BooleanLiteralGrammar::Rules
does ByteLiteralGrammar::Rules
does ByteStringLiteralGrammar::Rules
does CharLiteralGrammar::Rules
does DelimitersGrammar::Rules
does FloatLiteralGrammar::Rules
does IntLiteralGrammar::Rules
does StringLiteralGrammar::Rules
{
    rule TOP {
        <.ws> 
        <statement>+
    }
}

our role Rust::Actions::Role
    does ArrayExpressionGrammar::Actions 
    does AssociatedItemGrammar::Actions 
    does BareFunctionTypeGrammar::Actions 
    does BlockCommentGrammar::Actions 
    does BlockExpressionGrammar::Actions 
    does BooleanLiteralGrammar::Actions
    does CfgAttrGrammar::Actions 
    does ClosureExpressionGrammar::Actions 
    does CommentGrammar::Actions 
    does ConfigurationPredicateGrammar::Actions 
    does CrateGrammar::Actions 
    does EnumerationGrammar::Actions 
    does ExpressionGrammar::Actions 
    does ExternBlockGrammar::Actions 
    does FunctionGrammar::Actions 
    does GenericArgsGrammar::Actions 
    does GenericParamsGrammar::Actions 
    does IdentifiersGrammar::Actions 
    does IfExpressionsGrammar::Actions 
    does ImplTraitTypeGrammar::Actions 
    does ItemGrammar::Actions 
    does JumpExpressionGrammar::Actions 
    does LifetimesGrammar::Actions 
    does LineCommentGrammar::Actions 
    does LiteralExpressionGrammar::Actions 
    does LiteralPatternGrammar::Actions 
    does LoopExpressionGrammar::Actions 
    does MacroInvocationGrammar::Actions 
    does MatchExpressionGrammar::Actions 
    does MetaItemGrammar::Actions 
    does PathExpressionGrammar::Actions 
    does PatternGrammar::Actions 
    does PunctuationGrammar::Actions 
    does RangePatternGrammar::Actions 
    does ReferencePatternGrammar::Actions 
    does ReservedKeywordsGrammar::Actions 
    does SimplePathGrammar::Actions 
    does StatementGrammar::Actions 
    does StrictKeywordsGrammar::Actions 
    does StructGrammar::Actions 
    does StructExpressionGrammar::Actions 
    does StructPatternGrammar::Actions 
    does TokensGrammar::Actions 
    does TraitGrammar::Actions 
    does TraitObjectTypeGrammar::Actions 
    does TupleExpressionGrammar::Actions 
    does TupleStructPatternGrammar::Actions 
    does TypeGrammar::Actions 
    does TypeAliasGrammar::Actions 
    does TypePathGrammar::Actions 
    does UnionGrammar::Actions 
    does UseDeclarationGrammar::Actions 
    does VisibilityGrammar::Actions 
    does WeakKeywordsGrammar::Actions 
    does WhereClauseGrammar::Actions {}

our grammar Rust::Grammar 
does Rust::Grammar::Role 
{}

our class Rust::Actions 
does Rust::Actions::Role 
{}

use Grammar::Tracer;
our grammar Rust::GrammarD 
does Rust::Grammar::Role 
{}
